---
# http://nifi.apache.org/quickstart.html
- name: configure Maximum File Handles and Maximum Forked Processes
  lineinfile:
      dest: /etc/security/limits.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
  with_items:
    - { regexp: "^\\*\\W+hard\\W+nofile", line: "*  hard  nofile  50000" }
    - { regexp: "^\\*\\W+soft\\W+nofile", line: "*  soft  nofile  50000" }
    - { regexp: "^\\*\\W+hard\\W+nproc",  line: "*  hard  nproc   10000" }
    - { regexp: "^\\*\\W+soft\\W+nproc",  line: "*  soft  nproc   10000" }
  notify:
    - restart-service-nifi

- name: copy a NiFi systemd service file
  template:
    src: nifi.service
    dest: /lib/systemd/system/nifi.service
    owner: root
    group: root
    mode: 0644
  notify:
    - register-autostart-service-nifi

- name: copy NiFi configuration files
  template:
    src: "{{ item }}"
    dest: "/opt/nifi-{{ nifi_version }}/conf/{{ item }}"
    owner: "{{ nifi_os_user_name }}"
    group: "{{ nifi_os_group_name }}"
    mode: 0644
  with_items:
     - nifi.properties
     - bootstrap.conf
     - authorizers.xml
  notify:
    - restart-service-nifi

- name: copy TLS truststore file for NiFi
  copy:
    src: /etc/letsencrypt/live/{{ nifi_domain_name }}/{{ nifi_security_truststore_file_name }}
    dest: /opt/nifi-{{ nifi_version }}/conf/{{ nifi_security_truststore_file_name }}
    remote_src: yes
    owner: "{{ nifi_os_user_name }}"
    group: "{{ nifi_os_group_name }}"
    mode: 0644
  when: nifi_security_truststore_file_name is defined
  notify:
    - restart-service-nifi

- name: add a crontab job to copy a new truststore for NiFi after letsencrypt certificates renew
  cron:
    name: "copy a new truststore for NiFi after letsencrypt certificates renew"
    month: "*" # 0 0 14 1 * ? (Every month on the 1st, at 14:00)
    day: "1"
    hour: "14"
    minute: "0"
    job: "cp /etc/letsencrypt/live/{{ nifi_domain_name }}/{{ nifi_security_truststore_file_name }} /opt/nifi-{{ nifi_version }}/conf/{{ nifi_security_truststore_file_name }}"
  when: nifi_security_truststore_file_name is defined


- name: open NiFi API endpoint ports in firewall
  ufw:
    rule: allow
    port: "{{ item }}"
  with_items:
    - "{{ firewall_open_ports }}"
  when: firewall_open_ports is defined

- name: add a crontab job for a freemyip domain name
  cron:
    name: "update {{ nifi_freemyip_domain_name }}"
    minute: "*/19"
    job: "curl \"https://freemyip.com/update?token={{ nifi_freemyip_domain_token }}&domain={{ nifi_freemyip_domain_name }}\" > /dev/null 2>&1"
  when: nifi_freemyip_domain_name is defined and nifi_freemyip_domain_token is defined

