- name: set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: check if mc config directory exists
  stat:
    path: "/home/{{ basic_user_name }}/.config/mc"
  register: mc_config_dir

- name: create mc config directory
  file:
    path: "{{ item.home }}/.config/mc"
    owner: "{{ item.user }}"
    group: "{{ item.user }}"
    state: directory
    mode: 0700
  with_items:
    - { home: "/home/{{ basic_user_name }}", user: "{{ basic_user_name }}" }
    - { home: "/root", user: "root" }
  when: mc_config_dir.stat.exists == False

- name: copy mc config ini file
  template:
    src: "ini_{{ item.suffix }}"
    dest: "{{ item.home }}/.config/mc/ini"
    owner: "{{ item.user }}"
    group: "{{ item.user }}"
    mode: 0644
  with_items:
    - { home: "/home/{{ basic_user_name }}", user: "{{ basic_user_name }}", suffix: "user" }
    - { home: "/root", user: "root", suffix: "root" }
  when: mc_config_dir.stat.exists == False

- name: copy mc config panels file
  template:
    src: "panels.ini"
    dest: "{{ item.home }}/.config/mc/panels.ini"
    owner: "{{ item.user }}"
    group: "{{ item.user }}"
    mode: 0644
  with_items:
    - { home: "/home/{{ basic_user_name }}", user: "{{ basic_user_name }}" }
    - { home: "/root", user: "root" }
  when: mc_config_dir.stat.exists == False

- name: disable root login via ssh if it's enabled
  replace:
    path: /etc/ssh/sshd_config
    regexp: "PermitRootLogin yes"
    replace: "PermitRootLogin no"
  notify:
    - restart-service-sshd

# Idempotent way to build a /etc/hosts file with Ansible using your Ansible hosts inventory for a source.
# Will include all hosts the playbook is run on.
# Inspired from http://xmeblog.blogspot.com/2013/06/ansible-dynamicaly-update-etchosts.html
- name: add all known hosts to each /etc/hosts file
  lineinfile:
      dest: /etc/hosts
      regexp: ^(([0-9]+)(\.|)){4}\W{{ item }}$
      line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}"
      state: present
  when: hostvars[item].ansible_default_ipv4 is defined and hostvars[item].ansible_default_ipv4.address is defined
  with_items: "{{ groups['data_platform'] }}"

- name: set swappiness value via sysctl
  sysctl:
    name: vm.swappiness
    value: '10'
    state: present
    reload: yes
  notify:
    - clear-swap
